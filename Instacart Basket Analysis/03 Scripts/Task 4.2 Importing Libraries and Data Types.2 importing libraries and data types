{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c7891c2a",
   "metadata": {},
   "source": [
    "# 01. Importing libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6824c79e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import libaries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import os"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b98ab4b6",
   "metadata": {},
   "source": [
    "# 02. Data Types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dcf9f10c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 3 different ways of reaching result of 100 by adding or subracting numeric variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "65724b35",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = 50 + 50"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "54818c68",
   "metadata": {},
   "outputs": [],
   "source": [
    "y = 150 - 50"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "22866fc7",
   "metadata": {},
   "outputs": [],
   "source": [
    "z = 80 + 20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "65ddd442",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "100 100 100\n"
     ]
    }
   ],
   "source": [
    "print(x, y, z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ac86069d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Divide 2 floating-point variables by each other"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "643a320f",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = 5.62 / 3.49"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "feaa646d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.6103151862464182\n"
     ]
    }
   ],
   "source": [
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "62719b0d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Construct a short word made up of separate strings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "3890994f",
   "metadata": {},
   "outputs": [],
   "source": [
    "a = \"H\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "c6cc5216",
   "metadata": {},
   "outputs": [],
   "source": [
    "b = \"i\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "b107f6b3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hi\n"
     ]
    }
   ],
   "source": [
    "print(a + b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3e4550f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Construct 2 short sentences made up of separate strings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "4ac4b07a",
   "metadata": {},
   "outputs": [],
   "source": [
    "a = \"Hello, \""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "acb8e795",
   "metadata": {},
   "outputs": [],
   "source": [
    "b = \"World!\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c72d52ae",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello, World!\n"
     ]
    }
   ],
   "source": [
    "print(a + b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "5e71a1c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Include a command that makes a string appear 10 times"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "c0977890",
   "metadata": {},
   "outputs": [],
   "source": [
    "c = a + b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "b039dba8",
   "metadata": {},
   "outputs": [],
   "source": [
    "c = c * 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "625e4ec7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "HiHiHiHiHiHiHiHiHiHi\n"
     ]
    }
   ],
   "source": [
    "print(c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cf387e3f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
